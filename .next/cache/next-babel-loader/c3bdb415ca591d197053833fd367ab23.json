{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { loadDB } from '../lib/js/db';\nimport { createContext, useContext, useEffect, useState } from 'react';\n\nconst Index = props => {\n  const {\n    0: num,\n    1: setNum\n  } = useState(0);\n  useEffect(() => {// 마운트 시에만 실행\n  }, []);\n  useEffect(() => {\n    // 렌더링 될 때마다 실행\n    console.log('useEffect');\n  }, [data]);\n\n  const refresh = async () => {\n    console.log(`data: ${JSON.stringify(data)}`);\n    const db = await loadDB();\n    const querySnapshot = await db.collection('zz').get();\n    let newData = [];\n    querySnapshot.forEach(doc => {\n      newData.push(doc.data());\n    });\n    console.log('is updating..');\n    console.log(newData); // return { data };\n\n    setData(prev => [...newData]);\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1440438755\"\n  }, \"MyXD - Index\")), __jsx(\"h1\", {\n    className: \"jsx-1440438755\"\n  }, \"This is Main Page\"), __jsx(\"button\", {\n    onClick: refresh,\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-warning text-white\"\n  }, \"refresh\"), __jsx(\"ul\", {\n    className: \"jsx-1440438755\"\n  }, props.data.map((item, idx) => __jsx(\"li\", {\n    key: idx,\n    className: \"jsx-1440438755\"\n  }, item.zzz))), __jsx(\"span\", {\n    className: \"jsx-1440438755\"\n  }, num), __jsx(\"button\", {\n    onClick: () => setNum(num + 1),\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-default\"\n  }, \"add\"), __jsx(_JSXStyle, {\n    id: \"1440438755\"\n  }, \"h1.jsx-1440438755{font-color:#333;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZG9tZmFtXFxEZXNrdG9wXFxNeVhEXFxzZXJ2ZXJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRHdCLEFBR3FDLGdCQUNwQiIsImZpbGUiOiJDOlxcVXNlcnNcXGRvbWZhbVxcRGVza3RvcFxcTXlYRFxcc2VydmVyXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcclxuaW1wb3J0IHsgbG9hZERCIH0gZnJvbSAnLi4vbGliL2pzL2RiJztcclxuXHJcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBJbmRleCA9IHByb3BzID0+IHtcclxuICAgIGNvbnN0IFsgbnVtLCBzZXROdW0gXSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgLy8g66eI7Jq07Yq4IOyLnOyXkOunjCDsi6TtlolcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIC8vIOugjOuNlOungSDrkKAg65WM66eI64ukIOyLpO2WiVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCd1c2VFZmZlY3QnKTtcclxuICAgIH0sIFsgZGF0YSBdKTtcclxuXHJcbiAgICBjb25zdCByZWZyZXNoID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBkYXRhOiAke0pTT04uc3RyaW5naWZ5KGRhdGEpfWApO1xyXG5cclxuICAgICAgICBjb25zdCBkYiA9IGF3YWl0IGxvYWREQigpO1xyXG4gICAgICAgIGNvbnN0IHF1ZXJ5U25hcHNob3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCd6eicpLmdldCgpO1xyXG4gICAgICAgIGxldCBuZXdEYXRhID0gW107XHJcbiAgICAgICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGRvYyA9PiB7XHJcbiAgICAgICAgICAgIG5ld0RhdGEucHVzaChkb2MuZGF0YSgpKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coJ2lzIHVwZGF0aW5nLi4nKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhuZXdEYXRhKTtcclxuICAgICAgICAvLyByZXR1cm4geyBkYXRhIH07XHJcbiAgICAgICAgc2V0RGF0YShwcmV2ID0+IChbLi4ubmV3RGF0YV0pKTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8TGF5b3V0PlxyXG4gICAgICAgICAgICA8SGVhZD5cclxuICAgICAgICAgICAgICAgIDx0aXRsZT5NeVhEIC0gSW5kZXg8L3RpdGxlPlxyXG4gICAgICAgICAgICA8L0hlYWQ+XHJcbiAgICAgICAgICAgIDxoMT5UaGlzIGlzIE1haW4gUGFnZTwvaDE+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtcImJ0biBidG4td2FybmluZyB0ZXh0LXdoaXRlXCJ9IG9uQ2xpY2s9e3JlZnJlc2h9PnJlZnJlc2g8L2J1dHRvbj5cclxuICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAge3Byb3BzLmRhdGEubWFwKChpdGVtLCBpZHgpID0+IChcclxuICAgICAgICAgICAgICAgICAgICA8bGkga2V5PXtpZHh9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7aXRlbS56enp9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8L3VsPlxyXG5cclxuICAgICAgICAgICAgPHNwYW4+e251bX08L3NwYW4+XHJcbiAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gc2V0TnVtKG51bSArIDEpfSBjbGFzc05hbWU9XCJidG4gYnRuLWRlZmF1bHRcIj5hZGQ8L2J1dHRvbj5cclxuXHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgIGgxIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWNvbG9yOiAjMzMzO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcblxyXG4gICAgICAgIDwvTGF5b3V0PlxyXG4gICAgKTtcclxufTtcclxuXHJcbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgZGIgPSBhd2FpdCBsb2FkREIoKTtcclxuICAgIGxldCBkYXRhID0gW107XHJcbiAgICBjb25zdCBxdWVyeVNuYXBzaG90ID0gYXdhaXQgZGIuY29sbGVjdGlvbignenonKS5nZXQoKTtcclxuICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChkb2MgPT4ge1xyXG4gICAgICAgIGRhdGEucHVzaChkb2MuZGF0YSgpKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHsgZGF0YSB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\domfam\\\\\\\\Desktop\\\\\\\\MyXD\\\\\\\\server\\\\\\\\pages\\\\\\\\index.js */\"));\n};\n\nIndex.getInitialProps = async function () {\n  const db = await loadDB();\n  let data = [];\n  const querySnapshot = await db.collection('zz').get();\n  querySnapshot.forEach(doc => {\n    data.push(doc.data());\n  });\n  return {\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/domfam/Desktop/MyXD/server/pages/index.js"],"names":["Head","Layout","Link","fetch","loadDB","createContext","useContext","useEffect","useState","Index","props","num","setNum","console","log","data","refresh","JSON","stringify","db","querySnapshot","collection","get","newData","forEach","doc","push","setData","prev","map","item","idx","zzz","getInitialProps"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM;AAAA,OAAEC,GAAF;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAA,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAHQ,EAGN,CAAEC,IAAF,CAHM,CAAT;;AAKA,QAAMC,OAAO,GAAG,YAAY;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQG,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAqB,EAA1C;AAEA,UAAMI,EAAE,GAAG,MAAMf,MAAM,EAAvB;AACA,UAAMgB,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACA,QAAIC,OAAO,GAAG,EAAd;AACAH,IAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAG,IAAI;AACzBF,MAAAA,OAAO,CAACG,IAAR,CAAaD,GAAG,CAACV,IAAJ,EAAb;AACH,KAFD;AAIAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ,EAXwB,CAYxB;;AACAI,IAAAA,OAAO,CAACC,IAAI,IAAK,CAAC,GAAGL,OAAJ,CAAV,CAAP;AACH,GAdD;;AAgBA,SACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI;AAAA;AAAA,oBADJ,CADJ,EAII;AAAA;AAAA,yBAJJ,EAKI;AAAiD,IAAA,OAAO,EAAEP,OAA1D;AAAA,wCAAmB;AAAnB,eALJ,EAMI;AAAA;AAAA,KACKN,KAAK,CAACK,IAAN,CAAWc,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KACZ;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA,KACKD,IAAI,CAACE,GADV,CADH,CADL,CANJ,EAcI;AAAA;AAAA,KAAOrB,GAAP,CAdJ,EAeI;AAAQ,IAAA,OAAO,EAAE,MAAMC,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA,wCAAkD;AAAlD,WAfJ;AAAA;AAAA,+1GADJ;AA0BH,CAtDD;;AAwDAF,KAAK,CAACwB,eAAN,GAAwB,kBAAiB;AACrC,QAAMd,EAAE,GAAG,MAAMf,MAAM,EAAvB;AACA,MAAIW,IAAI,GAAG,EAAX;AACA,QAAMK,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACAF,EAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAG,IAAI;AACzBV,IAAAA,IAAI,CAACW,IAAL,CAAUD,GAAG,CAACV,IAAJ,EAAV;AACH,GAFD;AAGA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CARD;;AAUA,eAAeN,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { loadDB } from '../lib/js/db';\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst Index = props => {\r\n    const [ num, setNum ] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // 마운트 시에만 실행\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // 렌더링 될 때마다 실행\r\n        console.log('useEffect');\r\n    }, [ data ]);\r\n\r\n    const refresh = async () => {\r\n        console.log(`data: ${JSON.stringify(data)}`);\r\n\r\n        const db = await loadDB();\r\n        const querySnapshot = await db.collection('zz').get();\r\n        let newData = [];\r\n        querySnapshot.forEach(doc => {\r\n            newData.push(doc.data());\r\n        });\r\n\r\n        console.log('is updating..');\r\n        console.log(newData);\r\n        // return { data };\r\n        setData(prev => ([...newData]));\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>MyXD - Index</title>\r\n            </Head>\r\n            <h1>This is Main Page</h1>\r\n            <button className={\"btn btn-warning text-white\"} onClick={refresh}>refresh</button>\r\n            <ul>\r\n                {props.data.map((item, idx) => (\r\n                    <li key={idx}>\r\n                        {item.zzz}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <span>{num}</span>\r\n            <button onClick={() => setNum(num + 1)} className=\"btn btn-default\">add</button>\r\n\r\n            <style jsx>{`\r\n                h1 {\r\n                    font-color: #333;\r\n                }\r\n            `}</style>\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async function() {\r\n    const db = await loadDB();\r\n    let data = [];\r\n    const querySnapshot = await db.collection('zz').get();\r\n    querySnapshot.forEach(doc => {\r\n        data.push(doc.data());\r\n    });\r\n    return { data };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}