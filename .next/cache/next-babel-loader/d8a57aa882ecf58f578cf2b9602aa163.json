{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { createContext, useContext, useEffect, useState } from 'react';\n\nconst Index = props => {\n  useEffect(() => {// 마운트 시에만 실행\n  }, []);\n  useEffect(() => {// 렌더링 될 때마다 실행\n  });\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-627141962\"\n  }, \"MyXD - Index\")), __jsx(\"h1\", {\n    className: \"jsx-627141962\"\n  }, \"This is Main Page\"), __jsx(\"h3\", {\n    className: \"jsx-627141962\"\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    className: \"jsx-627141962\"\n  }), __jsx(\"button\", {\n    onClick: getFirebase,\n    className: \"jsx-627141962\"\n  }, \"get\"), __jsx(_JSXStyle, {\n    id: \"627141962\"\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZG9tZmFtXFxEZXNrdG9wXFxNeVhEXFxzZXJ2ZXJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ3dCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcZG9tZmFtXFxEZXNrdG9wXFxNeVhEXFxzZXJ2ZXJcXHBhZ2VzXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcclxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xyXG5cclxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4ge1xyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICAvLyDrp4jsmrTtirgg7Iuc7JeQ66eMIOyLpO2WiVxyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgLy8g66CM642U66eBIOuQoCDrlYzrp4jri6Qg7Iuk7ZaJXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPk15WEQgLSBJbmRleDwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgxPlRoaXMgaXMgTWFpbiBQYWdlPC9oMT5cclxuICAgICAgICAgICAgPGgzPkJhdG1hbiBUViBTaG93czwvaDM+XHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgIHsvKntwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoKi99XHJcbiAgICAgICAgICAgICAgICB7LyogICAgPGxpIGtleT17c2hvdy5pZH0+Ki99XHJcbiAgICAgICAgICAgICAgICB7LyogICAgICAgIDxMaW5rIGhyZWY9e1wiL3AvW2lkXVwifSBhcz17YC9wLyR7c2hvdy5pZH1gfT4qL31cclxuICAgICAgICAgICAgICAgIHsvKiAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPiovfVxyXG4gICAgICAgICAgICAgICAgey8qICAgICAgICA8L0xpbms+Ki99XHJcbiAgICAgICAgICAgICAgICB7LyogICAgPC9saT4qL31cclxuICAgICAgICAgICAgICAgIHsvKikpfSovfVxyXG4gICAgICAgICAgICA8L3VsPlxyXG5cclxuICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtnZXRGaXJlYmFzZX0+Z2V0PC9idXR0b24+XHJcblxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cclxuICAgICAgICA8L0xheW91dD5cclxuICAgICk7XHJcbn07XHJcblxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcclxuICAgIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW5cIik7XHJcbiAgICAvLyBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuICAgIC8vXHJcbiAgICAvLyByZXR1cm4ge1xyXG4gICAgLy8gICAgIHBvc3RzOiBkYXRhXHJcbiAgICAvLyB9O1xyXG5cclxuICAgIGF3YWl0IGZpcmViYXNlLmluaXRpYWxpemVBcHAoe1xyXG4gICAgICAgIGFwaUtleTogJ0FJemFTeUJFSDNSY1JYdlpaOC00QWhRdHVZYVVIYlc2RkRGTURKQScsXHJcbiAgICAgICAgYXV0aERvbWFpbjogJ2xvY2FsaG9zdCcsXHJcbiAgICAgICAgcHJvamVjdElkOiAnbXlmaXJzdHRlc3QtNThjM2InXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IGZpcmViYXNlLmZpcmVzdG9yZSgpO1xyXG5cclxuICAgIGNvbnN0IGRhdGEgPSB7fTtcclxuICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJ6elwiKS5nZXQoKS50aGVuKChxdWVyeVNuYXBzaG90KSA9PiB7XHJcbiAgICAgICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKChkb2MpID0+IHtcclxuICAgICAgICAgICAgZGF0YSA9IHsuLi5kb2MuZGF0YX07XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbn07XHJcblxyXG4vLyBjb25zdCBnZXRGaXJlYmFzZSA9ICgpID0+IHtcclxuLy9cclxuLy8gfTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEluZGV4O1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\domfam\\\\\\\\Desktop\\\\\\\\MyXD\\\\\\\\server\\\\\\\\pages\\\\\\\\index.js */\"));\n};\n\nIndex.getInitialProps = async function () {\n  // const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  // const data = await res.json();\n  //\n  // return {\n  //     posts: data\n  // };\n  await firebase.initializeApp({\n    apiKey: 'AIzaSyBEH3RcRXvZZ8-4AhQtuYaUHbW6FDFMDJA',\n    authDomain: 'localhost',\n    projectId: 'myfirsttest-58c3b'\n  });\n  const db = await firebase.firestore();\n  const data = {};\n  await db.collection(\"zz\").get().then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n      data = _objectSpread({}, doc.data);\n    });\n  });\n}; // const getFirebase = () => {\n//\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/domfam/Desktop/MyXD/server/pages/index.js"],"names":["Head","Layout","Link","fetch","createContext","useContext","useEffect","useState","Index","props","getFirebase","getInitialProps","firebase","initializeApp","apiKey","authDomain","projectId","db","firestore","data","collection","get","then","querySnapshot","forEach","doc"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnBH,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAA,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,CAAT;AAIA,SACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI;AAAA;AAAA,oBADJ,CADJ,EAII;AAAA;AAAA,yBAJJ,EAKI;AAAA;AAAA,uBALJ,EAMI;AAAA;AAAA,IANJ,EAgBI;AAAQ,IAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA,WAhBJ;AAAA;AAAA,4hGADJ;AAyBH,CAlCD;;AAoCAF,KAAK,CAACG,eAAN,GAAwB,kBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,CAACC,aAAT,CAAuB;AACzBC,IAAAA,MAAM,EAAE,yCADiB;AAEzBC,IAAAA,UAAU,EAAE,WAFa;AAGzBC,IAAAA,SAAS,EAAE;AAHc,GAAvB,CAAN;AAMA,QAAMC,EAAE,GAAG,MAAML,QAAQ,CAACM,SAAT,EAAjB;AAEA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMF,EAAE,CAACG,UAAH,CAAc,IAAd,EAAoBC,GAApB,GAA0BC,IAA1B,CAAgCC,aAAD,IAAmB;AACpDA,IAAAA,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;AAC3BN,MAAAA,IAAI,qBAAOM,GAAG,CAACN,IAAX,CAAJ;AACH,KAFD;AAGH,GAJK,CAAN;AAMH,CAvBD,C,CAyBA;AACA;AACA;;;AAEA,eAAeX,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst Index = props => {\r\n    useEffect(() => {\r\n        // 마운트 시에만 실행\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // 렌더링 될 때마다 실행\r\n    });\r\n\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>MyXD - Index</title>\r\n            </Head>\r\n            <h1>This is Main Page</h1>\r\n            <h3>Batman TV Shows</h3>\r\n            <ul>\r\n                {/*{props.shows.map(show => (*/}\r\n                {/*    <li key={show.id}>*/}\r\n                {/*        <Link href={\"/p/[id]\"} as={`/p/${show.id}`}>*/}\r\n                {/*            <a>{show.name}</a>*/}\r\n                {/*        </Link>*/}\r\n                {/*    </li>*/}\r\n                {/*))}*/}\r\n            </ul>\r\n\r\n            <button onClick={getFirebase}>get</button>\r\n\r\n            <style jsx>{`\r\n                \r\n            `}</style>\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async function() {\r\n    // const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\r\n    // const data = await res.json();\r\n    //\r\n    // return {\r\n    //     posts: data\r\n    // };\r\n\r\n    await firebase.initializeApp({\r\n        apiKey: 'AIzaSyBEH3RcRXvZZ8-4AhQtuYaUHbW6FDFMDJA',\r\n        authDomain: 'localhost',\r\n        projectId: 'myfirsttest-58c3b'\r\n    });\r\n\r\n    const db = await firebase.firestore();\r\n\r\n    const data = {};\r\n    await db.collection(\"zz\").get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            data = {...doc.data};\r\n        });\r\n    });\r\n\r\n};\r\n\r\n// const getFirebase = () => {\r\n//\r\n// };\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}