{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { loadDB } from '../lib/js/db';\nimport { createContext, useContext, useEffect, useState } from 'react';\n\nconst Index = props => {\n  const {\n    0: num,\n    1: setNum\n  } = useState(0);\n  useEffect(() => {\n    // 렌더링 될 때마다 실행\n    console.log('useEffect'); // 마운트 될 때만 실행도 가능\n  });\n\n  const refresh = async () => {\n    // console.log(`data: ${JSON.stringify(data)}`);\n    const db = await loadDB();\n    const querySnapshot = await db.collection('zz').get();\n    let newData = [];\n    querySnapshot.forEach(doc => {\n      newData.push(doc.data());\n    });\n    console.log('is updating..');\n    console.log(newData); // return { data };\n    // setData(prev => ([...newData]));\n\n    props.data = [...newData];\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1440438755\"\n  }, \"MyXD - Index\")), __jsx(\"h1\", {\n    className: \"jsx-1440438755\"\n  }, \"This is Main Page\"), __jsx(\"button\", {\n    onClick: refresh,\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-warning text-white\"\n  }, \"refresh\"), __jsx(\"ul\", {\n    className: \"jsx-1440438755\"\n  }, props.data.map((item, idx) => __jsx(\"li\", {\n    key: idx,\n    className: \"jsx-1440438755\"\n  }, item.zzz))), __jsx(\"span\", {\n    className: \"jsx-1440438755\"\n  }, num), __jsx(\"button\", {\n    onClick: () => setNum(num + 1),\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-default\"\n  }, \"add\"), __jsx(_JSXStyle, {\n    id: \"1440438755\"\n  }, \"h1.jsx-1440438755{font-color:#333;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZG9tZmFtXFxEZXNrdG9wXFxNeVhEXFxzZXJ2ZXJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RHdCLEFBR3FDLGdCQUNwQiIsImZpbGUiOiJDOlxcVXNlcnNcXGRvbWZhbVxcRGVza3RvcFxcTXlYRFxcc2VydmVyXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcclxuaW1wb3J0IHsgbG9hZERCIH0gZnJvbSAnLi4vbGliL2pzL2RiJztcclxuXHJcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBJbmRleCA9IHByb3BzID0+IHtcclxuXHJcbiAgICBjb25zdCBbIG51bSwgc2V0TnVtIF0gPSB1c2VTdGF0ZSgwKTtcclxuXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIC8vIOugjOuNlOungSDrkKAg65WM66eI64ukIOyLpO2WiVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCd1c2VFZmZlY3QnKTtcclxuXHJcblxyXG4gICAgICAgIC8vIOuniOyatO2KuCDrkKAg65WM66eMIOyLpO2WieuPhCDqsIDriqVcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlZnJlc2ggPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coYGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9YCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRiID0gYXdhaXQgbG9hZERCKCk7XHJcbiAgICAgICAgY29uc3QgcXVlcnlTbmFwc2hvdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3p6JykuZ2V0KCk7XHJcbiAgICAgICAgbGV0IG5ld0RhdGEgPSBbXTtcclxuICAgICAgICBxdWVyeVNuYXBzaG90LmZvckVhY2goZG9jID0+IHtcclxuICAgICAgICAgICAgbmV3RGF0YS5wdXNoKGRvYy5kYXRhKCkpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZygnaXMgdXBkYXRpbmcuLicpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKG5ld0RhdGEpO1xyXG4gICAgICAgIC8vIHJldHVybiB7IGRhdGEgfTtcclxuICAgICAgICAvLyBzZXREYXRhKHByZXYgPT4gKFsuLi5uZXdEYXRhXSkpO1xyXG5cclxuICAgICAgICBwcm9wcy5kYXRhID0gWy4uLm5ld0RhdGFdO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPk15WEQgLSBJbmRleDwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgxPlRoaXMgaXMgTWFpbiBQYWdlPC9oMT5cclxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9e1wiYnRuIGJ0bi13YXJuaW5nIHRleHQtd2hpdGVcIn0gb25DbGljaz17cmVmcmVzaH0+cmVmcmVzaDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgICAgICB7cHJvcHMuZGF0YS5tYXAoKGl0ZW0sIGlkeCkgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e2lkeH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtpdGVtLnp6en1cclxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDwvdWw+XHJcblxyXG4gICAgICAgICAgICA8c3Bhbj57bnVtfTwvc3Bhbj5cclxuICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXROdW0obnVtICsgMSl9IGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdFwiPmFkZDwvYnV0dG9uPlxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgaDEge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuXHJcbiAgICAgICAgPC9MYXlvdXQ+XHJcbiAgICApO1xyXG59O1xyXG5cclxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IGxvYWREQigpO1xyXG4gICAgbGV0IGRhdGEgPSBbXTtcclxuICAgIGNvbnN0IHF1ZXJ5U25hcHNob3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCd6eicpLmdldCgpO1xyXG4gICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGRvYyA9PiB7XHJcbiAgICAgICAgZGF0YS5wdXNoKGRvYy5kYXRhKCkpO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4geyBkYXRhIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbmRleDtcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\domfam\\\\\\\\Desktop\\\\\\\\MyXD\\\\\\\\server\\\\\\\\pages\\\\\\\\index.js */\"));\n};\n\nIndex.getInitialProps = async function () {\n  const db = await loadDB();\n  let data = [];\n  const querySnapshot = await db.collection('zz').get();\n  querySnapshot.forEach(doc => {\n    data.push(doc.data());\n  });\n  return {\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/domfam/Desktop/MyXD/server/pages/index.js"],"names":["Head","Layout","Link","fetch","loadDB","createContext","useContext","useEffect","useState","Index","props","num","setNum","console","log","refresh","db","querySnapshot","collection","get","newData","forEach","doc","push","data","map","item","idx","zzz","getInitialProps"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAEnB,QAAM;AAAA,OAAEC,GAAF;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAFY,CAKZ;AACH,GANQ,CAAT;;AAQA,QAAMC,OAAO,GAAG,YAAY;AACxB;AAEA,UAAMC,EAAE,GAAG,MAAMZ,MAAM,EAAvB;AACA,UAAMa,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACA,QAAIC,OAAO,GAAG,EAAd;AACAH,IAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAG,IAAI;AACzBF,MAAAA,OAAO,CAACG,IAAR,CAAaD,GAAG,CAACE,IAAJ,EAAb;AACH,KAFD;AAIAX,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ,EAXwB,CAYxB;AACA;;AAEAV,IAAAA,KAAK,CAACc,IAAN,GAAa,CAAC,GAAGJ,OAAJ,CAAb;AACH,GAhBD;;AAkBA,SACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI;AAAA;AAAA,oBADJ,CADJ,EAII;AAAA;AAAA,yBAJJ,EAKI;AAAiD,IAAA,OAAO,EAAEL,OAA1D;AAAA,wCAAmB;AAAnB,eALJ,EAMI;AAAA;AAAA,KACKL,KAAK,CAACc,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KACZ;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA,KACKD,IAAI,CAACE,GADV,CADH,CADL,CANJ,EAcI;AAAA;AAAA,KAAOjB,GAAP,CAdJ,EAeI;AAAQ,IAAA,OAAO,EAAE,MAAMC,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA,wCAAkD;AAAlD,WAfJ;AAAA;AAAA,m3GADJ;AA0BH,CAxDD;;AA0DAF,KAAK,CAACoB,eAAN,GAAwB,kBAAiB;AACrC,QAAMb,EAAE,GAAG,MAAMZ,MAAM,EAAvB;AACA,MAAIoB,IAAI,GAAG,EAAX;AACA,QAAMP,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACAF,EAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAG,IAAI;AACzBE,IAAAA,IAAI,CAACD,IAAL,CAAUD,GAAG,CAACE,IAAJ,EAAV;AACH,GAFD;AAGA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CARD;;AAUA,eAAef,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { loadDB } from '../lib/js/db';\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst Index = props => {\r\n\r\n    const [ num, setNum ] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // 렌더링 될 때마다 실행\r\n        console.log('useEffect');\r\n\r\n\r\n        // 마운트 될 때만 실행도 가능\r\n    });\r\n\r\n    const refresh = async () => {\r\n        // console.log(`data: ${JSON.stringify(data)}`);\r\n\r\n        const db = await loadDB();\r\n        const querySnapshot = await db.collection('zz').get();\r\n        let newData = [];\r\n        querySnapshot.forEach(doc => {\r\n            newData.push(doc.data());\r\n        });\r\n\r\n        console.log('is updating..');\r\n        console.log(newData);\r\n        // return { data };\r\n        // setData(prev => ([...newData]));\r\n\r\n        props.data = [...newData];\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>MyXD - Index</title>\r\n            </Head>\r\n            <h1>This is Main Page</h1>\r\n            <button className={\"btn btn-warning text-white\"} onClick={refresh}>refresh</button>\r\n            <ul>\r\n                {props.data.map((item, idx) => (\r\n                    <li key={idx}>\r\n                        {item.zzz}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <span>{num}</span>\r\n            <button onClick={() => setNum(num + 1)} className=\"btn btn-default\">add</button>\r\n\r\n            <style jsx>{`\r\n                h1 {\r\n                    font-color: #333;\r\n                }\r\n            `}</style>\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async function() {\r\n    const db = await loadDB();\r\n    let data = [];\r\n    const querySnapshot = await db.collection('zz').get();\r\n    querySnapshot.forEach(doc => {\r\n        data.push(doc.data());\r\n    });\r\n    return { data };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}