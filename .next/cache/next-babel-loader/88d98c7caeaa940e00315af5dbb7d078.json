{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { loadDB } from '../lib/js/db';\nimport { createContext, useContext, useEffect, useState } from 'react'; // import { auth, firebase } from '../src/firebase'\n\nconst Index = props => {\n  useEffect(() => {// 마운트 시에만 실행\n  }, []);\n  useEffect(() => {// 렌더링 될 때마다 실행\n  });\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1440438755\"\n  }, \"MyXD - Index\")), __jsx(\"h1\", {\n    className: \"jsx-1440438755\"\n  }, \"This is Main Page\"), __jsx(\"ul\", {\n    className: \"jsx-1440438755\"\n  }, props.data.map((item, idx) => __jsx(\"li\", {\n    key: idx,\n    className: \"jsx-1440438755\"\n  }, __jsx(\"span\", {\n    className: \"jsx-1440438755\"\n  }, item)))), __jsx(\"button\", {\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-default\"\n  }, \"get\"), __jsx(_JSXStyle, {\n    id: \"1440438755\"\n  }, \"h1.jsx-1440438755{font-color:#333;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZG9tZmFtXFxEZXNrdG9wXFxNeVhEXFxzZXJ2ZXJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwQ3dCLEFBR3FDLGdCQUNwQiIsImZpbGUiOiJDOlxcVXNlcnNcXGRvbWZhbVxcRGVza3RvcFxcTXlYRFxcc2VydmVyXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcclxuaW1wb3J0IHsgbG9hZERCIH0gZnJvbSAnLi4vbGliL2pzL2RiJztcclxuXHJcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG4vLyBpbXBvcnQgeyBhdXRoLCBmaXJlYmFzZSB9IGZyb20gJy4uL3NyYy9maXJlYmFzZSdcclxuXHJcbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4ge1xyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICAvLyDrp4jsmrTtirgg7Iuc7JeQ66eMIOyLpO2WiVxyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgLy8g66CM642U66eBIOuQoCDrlYzrp4jri6Qg7Iuk7ZaJXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgICAgIDxIZWFkPlxyXG4gICAgICAgICAgICAgICAgPHRpdGxlPk15WEQgLSBJbmRleDwvdGl0bGU+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPGgxPlRoaXMgaXMgTWFpbiBQYWdlPC9oMT5cclxuICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgICAgey8qe3Byb3BzLnNob3dzLm1hcChzaG93ID0+ICgqL31cclxuICAgICAgICAgICAgICAgIHsvKiAgICA8bGkga2V5PXtzaG93LmlkfT4qL31cclxuICAgICAgICAgICAgICAgIHsvKiAgICAgICAgPExpbmsgaHJlZj17XCIvcC9baWRdXCJ9IGFzPXtgL3AvJHtzaG93LmlkfWB9PiovfVxyXG4gICAgICAgICAgICAgICAgey8qICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+Ki99XHJcbiAgICAgICAgICAgICAgICB7LyogICAgICAgIDwvTGluaz4qL31cclxuICAgICAgICAgICAgICAgIHsvKiAgICA8L2xpPiovfVxyXG4gICAgICAgICAgICAgICAgey8qKSl9Ki99XHJcbiAgICAgICAgICAgICAgICB7cHJvcHMuZGF0YS5tYXAoKGl0ZW0sIGlkeCkgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e2lkeH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPntpdGVtfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDwvdWw+XHJcblxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdFwiPmdldDwvYnV0dG9uPlxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgaDEge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuXHJcbiAgICAgICAgPC9MYXlvdXQ+XHJcbiAgICApO1xyXG59O1xyXG5cclxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XHJcbiAgICAvLyBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuXCIpO1xyXG4gICAgLy8gY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XHJcbiAgICAvL1xyXG4gICAgLy8gcmV0dXJuIHtcclxuICAgIC8vICAgICBwb3N0czogZGF0YVxyXG4gICAgLy8gfTtcclxuXHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IGxvYWREQigpO1xyXG4gICAgbGV0IGRhdGEgPSBbXTtcclxuICAgIGNvbnN0IHF1ZXJ5U25hcHNob3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCd6eicpLmdldCgpO1xyXG4gICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGRvYyA9PiB7XHJcbiAgICAgICAgZGF0YS5wdXNoKGRvYy5kYXRhKCkpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHsgZGF0YSB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW5kZXg7XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\domfam\\\\\\\\Desktop\\\\\\\\MyXD\\\\\\\\server\\\\\\\\pages\\\\\\\\index.js */\"));\n};\n\nIndex.getInitialProps = async function () {\n  // const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  // const data = await res.json();\n  //\n  // return {\n  //     posts: data\n  // };\n  const db = await loadDB();\n  let data = [];\n  const querySnapshot = await db.collection('zz').get();\n  querySnapshot.forEach(doc => {\n    data.push(doc.data());\n  });\n  return {\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/domfam/Desktop/MyXD/server/pages/index.js"],"names":["Head","Layout","Link","fetch","loadDB","createContext","useContext","useEffect","useState","Index","props","data","map","item","idx","getInitialProps","db","querySnapshot","collection","get","forEach","doc","push"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D,C,CAEA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnBH,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAA,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,CAAT;AAIA,SACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI;AAAA;AAAA,oBADJ,CADJ,EAII;AAAA;AAAA,yBAJJ,EAKI;AAAA;AAAA,KAQKG,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KACZ;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA,KACI;AAAA;AAAA,KAAOD,IAAP,CADJ,CADH,CARL,CALJ,EAoBI;AAAA,wCAAkB;AAAlB,WApBJ;AAAA;AAAA,2pGADJ;AA+BH,CAxCD;;AA0CAJ,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,EAAE,GAAG,MAAMZ,MAAM,EAAvB;AACA,MAAIO,IAAI,GAAG,EAAX;AACA,QAAMM,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACAF,EAAAA,aAAa,CAACG,OAAd,CAAsBC,GAAG,IAAI;AACzBV,IAAAA,IAAI,CAACW,IAAL,CAAUD,GAAG,CAACV,IAAJ,EAAV;AACH,GAFD;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAhBD;;AAkBA,eAAeF,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { loadDB } from '../lib/js/db';\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\n// import { auth, firebase } from '../src/firebase'\r\n\r\nconst Index = props => {\r\n    useEffect(() => {\r\n        // 마운트 시에만 실행\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // 렌더링 될 때마다 실행\r\n    });\r\n\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>MyXD - Index</title>\r\n            </Head>\r\n            <h1>This is Main Page</h1>\r\n            <ul>\r\n                {/*{props.shows.map(show => (*/}\r\n                {/*    <li key={show.id}>*/}\r\n                {/*        <Link href={\"/p/[id]\"} as={`/p/${show.id}`}>*/}\r\n                {/*            <a>{show.name}</a>*/}\r\n                {/*        </Link>*/}\r\n                {/*    </li>*/}\r\n                {/*))}*/}\r\n                {props.data.map((item, idx) => (\r\n                    <li key={idx}>\r\n                        <span>{item}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <button className=\"btn btn-default\">get</button>\r\n\r\n            <style jsx>{`\r\n                h1 {\r\n                    font-color: #333;\r\n                }\r\n            `}</style>\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async function() {\r\n    // const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\r\n    // const data = await res.json();\r\n    //\r\n    // return {\r\n    //     posts: data\r\n    // };\r\n\r\n    const db = await loadDB();\r\n    let data = [];\r\n    const querySnapshot = await db.collection('zz').get();\r\n    querySnapshot.forEach(doc => {\r\n        data.push(doc.data());\r\n    });\r\n\r\n    return { data };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}