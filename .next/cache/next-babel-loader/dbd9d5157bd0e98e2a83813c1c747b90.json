{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { loadDB } from '../lib/js/db';\nimport { createContext, useContext, useEffect, useState } from 'react';\n\nconst Index = props => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: num,\n    1: setNum\n  } = useState(0);\n  useEffect(() => {// 마운트 시에만 실행\n  }, []);\n  useEffect(() => {\n    // 렌더링 될 때마다 실행\n    console.log('useEffect');\n  }, [data]);\n\n  const refresh = async () => {\n    console.log(`data: ${JSON.stringify(data)}`);\n    const db = await loadDB();\n    const querySnapshot = await db.collection('zz').get();\n    let newData = [];\n    querySnapshot.forEach(doc => {\n      newData.push(doc.data());\n    });\n    console.log('is updating..');\n    console.log(newData); // return { data };\n\n    setData(prev => [...newData]);\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-1440438755\"\n  }, \"MyXD - Index\")), __jsx(\"h1\", {\n    className: \"jsx-1440438755\"\n  }, \"This is Main Page\"), __jsx(\"button\", {\n    onClick: refresh,\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-warning text-white\"\n  }, \"refresh\"), __jsx(\"ul\", {\n    className: \"jsx-1440438755\"\n  }, data.map((item, idx) => __jsx(\"li\", {\n    key: idx,\n    className: \"jsx-1440438755\"\n  }, item.zzz))), __jsx(\"span\", {\n    className: \"jsx-1440438755\"\n  }, num), __jsx(\"button\", {\n    onClick: () => setNum(num + 1),\n    className: \"jsx-1440438755\" + \" \" + \"btn btn-default\"\n  }, \"add\"), __jsx(_JSXStyle, {\n    id: \"1440438755\"\n  }, \"h1.jsx-1440438755{font-color:#333;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZG9tZmFtXFxEZXNrdG9wXFxNeVhEXFxzZXJ2ZXJcXHBhZ2VzXFxpbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RHdCLEFBR3FDLGdCQUNwQiIsImZpbGUiOiJDOlxcVXNlcnNcXGRvbWZhbVxcRGVza3RvcFxcTXlYRFxcc2VydmVyXFxwYWdlc1xcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcclxuaW1wb3J0IHsgbG9hZERCIH0gZnJvbSAnLi4vbGliL2pzL2RiJztcclxuXHJcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5jb25zdCBJbmRleCA9IHByb3BzID0+IHtcclxuICAgIGNvbnN0IFsgZGF0YSwgc2V0RGF0YSBdID0gdXNlU3RhdGUoW10pO1xyXG4gICAgY29uc3QgWyBudW0sIHNldE51bSBdID0gdXNlU3RhdGUoMCk7XHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICAvLyDrp4jsmrTtirgg7Iuc7JeQ66eMIOyLpO2WiVxyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgLy8g66CM642U66eBIOuQoCDrlYzrp4jri6Qg7Iuk7ZaJXHJcbiAgICAgICAgY29uc29sZS5sb2coJ3VzZUVmZmVjdCcpO1xyXG4gICAgfSwgWyBkYXRhIF0pO1xyXG5cclxuICAgIGNvbnN0IHJlZnJlc2ggPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9YClcclxuXHJcbiAgICAgICAgY29uc3QgZGIgPSBhd2FpdCBsb2FkREIoKTtcclxuICAgICAgICBjb25zdCBxdWVyeVNuYXBzaG90ID0gYXdhaXQgZGIuY29sbGVjdGlvbignenonKS5nZXQoKTtcclxuICAgICAgICBsZXQgbmV3RGF0YSA9IFtdO1xyXG4gICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChkb2MgPT4ge1xyXG4gICAgICAgICAgICBuZXdEYXRhLnB1c2goZG9jLmRhdGEoKSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdpcyB1cGRhdGluZy4uJyk7XHJcbiAgICAgICAgY29uc29sZS5sb2cobmV3RGF0YSk7XHJcbiAgICAgICAgLy8gcmV0dXJuIHsgZGF0YSB9O1xyXG4gICAgICAgIHNldERhdGEocHJldiA9PiAoWy4uLm5ld0RhdGFdKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPExheW91dD5cclxuICAgICAgICAgICAgPEhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dGl0bGU+TXlYRCAtIEluZGV4PC90aXRsZT5cclxuICAgICAgICAgICAgPC9IZWFkPlxyXG4gICAgICAgICAgICA8aDE+VGhpcyBpcyBNYWluIFBhZ2U8L2gxPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17XCJidG4gYnRuLXdhcm5pbmcgdGV4dC13aGl0ZVwifSBvbkNsaWNrPXtyZWZyZXNofT5yZWZyZXNoPC9idXR0b24+XHJcbiAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgIHtkYXRhLm1hcCgoaXRlbSwgaWR4KSA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17aWR4fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW0uenp6fVxyXG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICApKX1cclxuICAgICAgICAgICAgPC91bD5cclxuXHJcbiAgICAgICAgICAgIDxzcGFuPntudW19PC9zcGFuPlxyXG4gICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldE51bShudW0gKyAxKX0gY2xhc3NOYW1lPVwiYnRuIGJ0bi1kZWZhdWx0XCI+YWRkPC9idXR0b24+XHJcblxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICBoMSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1jb2xvcjogIzMzMztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cclxuICAgICAgICA8L0xheW91dD5cclxuICAgICk7XHJcbn07XHJcblxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbigpIHtcclxuICAgIGNvbnN0IGRiID0gYXdhaXQgbG9hZERCKCk7XHJcbiAgICBsZXQgZGF0YSA9IFtdO1xyXG4gICAgY29uc3QgcXVlcnlTbmFwc2hvdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3p6JykuZ2V0KCk7XHJcbiAgICBxdWVyeVNuYXBzaG90LmZvckVhY2goZG9jID0+IHtcclxuICAgICAgICBkYXRhLnB1c2goZG9jLmRhdGEoKSk7XHJcbiAgICB9KTtcclxuICAgIHNldERhdGEoLi4uZGF0YSk7XHJcbiAgICByZXR1cm4geyBkYXRhIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJbmRleDtcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\domfam\\\\\\\\Desktop\\\\\\\\MyXD\\\\\\\\server\\\\\\\\pages\\\\\\\\index.js */\"));\n};\n\nIndex.getInitialProps = async function () {\n  const db = await loadDB();\n  let data = [];\n  const querySnapshot = await db.collection('zz').get();\n  querySnapshot.forEach(doc => {\n    data.push(doc.data());\n  });\n  setData(...data);\n  return {\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/domfam/Desktop/MyXD/server/pages/index.js"],"names":["Head","Layout","Link","fetch","loadDB","createContext","useContext","useEffect","useState","Index","props","data","setData","num","setNum","console","log","refresh","JSON","stringify","db","querySnapshot","collection","get","newData","forEach","doc","push","prev","map","item","idx","zzz","getInitialProps"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAEK,GAAF;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAA,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAHQ,EAGN,CAAEL,IAAF,CAHM,CAAT;;AAKA,QAAMM,OAAO,GAAG,YAAY;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQE,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAqB,EAA1C;AAEA,UAAMS,EAAE,GAAG,MAAMhB,MAAM,EAAvB;AACA,UAAMiB,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACA,QAAIC,OAAO,GAAG,EAAd;AACAH,IAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAG,IAAI;AACzBF,MAAAA,OAAO,CAACG,IAAR,CAAaD,GAAG,CAACf,IAAJ,EAAb;AACH,KAFD;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EAXwB,CAYxB;;AACAZ,IAAAA,OAAO,CAACgB,IAAI,IAAK,CAAC,GAAGJ,OAAJ,CAAV,CAAP;AACH,GAdD;;AAgBA,SACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI;AAAA;AAAA,oBADJ,CADJ,EAII;AAAA;AAAA,yBAJJ,EAKI;AAAiD,IAAA,OAAO,EAAEP,OAA1D;AAAA,wCAAmB;AAAnB,eALJ,EAMI;AAAA;AAAA,KACKN,IAAI,CAACkB,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KACN;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA,KACKD,IAAI,CAACE,GADV,CADH,CADL,CANJ,EAcI;AAAA;AAAA,KAAOnB,GAAP,CAdJ,EAeI;AAAQ,IAAA,OAAO,EAAE,MAAMC,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA,wCAAkD;AAAlD,WAfJ;AAAA;AAAA,m7GADJ;AA0BH,CAvDD;;AAyDAJ,KAAK,CAACwB,eAAN,GAAwB,kBAAiB;AACrC,QAAMb,EAAE,GAAG,MAAMhB,MAAM,EAAvB;AACA,MAAIO,IAAI,GAAG,EAAX;AACA,QAAMU,aAAa,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,IAAd,EAAoBC,GAApB,EAA5B;AACAF,EAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAG,IAAI;AACzBf,IAAAA,IAAI,CAACgB,IAAL,CAAUD,GAAG,CAACf,IAAJ,EAAV;AACH,GAFD;AAGAC,EAAAA,OAAO,CAAC,GAAGD,IAAJ,CAAP;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CATD;;AAWA,eAAeF,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { loadDB } from '../lib/js/db';\r\n\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst Index = props => {\r\n    const [ data, setData ] = useState([]);\r\n    const [ num, setNum ] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // 마운트 시에만 실행\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // 렌더링 될 때마다 실행\r\n        console.log('useEffect');\r\n    }, [ data ]);\r\n\r\n    const refresh = async () => {\r\n        console.log(`data: ${JSON.stringify(data)}`)\r\n\r\n        const db = await loadDB();\r\n        const querySnapshot = await db.collection('zz').get();\r\n        let newData = [];\r\n        querySnapshot.forEach(doc => {\r\n            newData.push(doc.data());\r\n        });\r\n\r\n        console.log('is updating..');\r\n        console.log(newData);\r\n        // return { data };\r\n        setData(prev => ([...newData]));\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Head>\r\n                <title>MyXD - Index</title>\r\n            </Head>\r\n            <h1>This is Main Page</h1>\r\n            <button className={\"btn btn-warning text-white\"} onClick={refresh}>refresh</button>\r\n            <ul>\r\n                {data.map((item, idx) => (\r\n                    <li key={idx}>\r\n                        {item.zzz}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <span>{num}</span>\r\n            <button onClick={() => setNum(num + 1)} className=\"btn btn-default\">add</button>\r\n\r\n            <style jsx>{`\r\n                h1 {\r\n                    font-color: #333;\r\n                }\r\n            `}</style>\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndex.getInitialProps = async function() {\r\n    const db = await loadDB();\r\n    let data = [];\r\n    const querySnapshot = await db.collection('zz').get();\r\n    querySnapshot.forEach(doc => {\r\n        data.push(doc.data());\r\n    });\r\n    setData(...data);\r\n    return { data };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}